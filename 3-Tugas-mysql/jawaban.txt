a. Buat Table

CREATE TABLE user (
    id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL
);

CREATE TABLE profile (
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    age INT,
    biodata TEXT,
    address TEXT,
    FOREIGN KEY (user_id) REFERENCES user(id)
);

CREATE TABLE genre (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL
);

CREATE TABLE movie (
    id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(255) NOT NULL,
    summary TEXT,
    year YEAR,
    poster VARCHAR(255),
    genre_id INT,
    FOREIGN KEY (genre_id) REFERENCES genre(id)
);

CREATE TABLE cast (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    age INT,
    biodata TEXT
);

CREATE TABLE role (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL
);

CREATE TABLE movie_cast (
    movie_id INT,
    cast_id INT,
    PRIMARY KEY (movie_id, cast_id),
    FOREIGN KEY (movie_id) REFERENCES movie(id),
    FOREIGN KEY (cast_id) REFERENCES cast(id)
);

CREATE TABLE review (
    id INT PRIMARY KEY AUTO_INCREMENT,
    movie_id INT,
    user_id INT,
    rating INT,
    critics TEXT,
    FOREIGN KEY (movie_id) REFERENCES movie(id),
    FOREIGN KEY (user_id) REFERENCES user(id)
);


b. Insert data

1. Insert Data into genre Table

INSERT INTO genre (name) VALUES ('Action'), ('Drama');

2. Insert Data into movie Table

INSERT INTO movie (title, summary, year, poster, genre_id) VALUES 
('Infinity War', 'Summary of Action Movie 1', 2018, 'poster1.jpg', 1),
('End Game', 'Summary of Action Movie 2', 2019, 'poster2.jpg', 1),
('Lovely Runner', 'Summary of Drama Movie 1', 2022, 'poster3.jpg', 2),
('Queen of Tears', 'Summary of Drama Movie 2', 2023, 'poster4.jpg', 2),
('Remember', 'Summary of Drama Movie 3', 2024, 'poster5.jpg', 2);

3. Insert Data ke Role Table

INSERT INTO role (name) VALUES
('Lead Actor'),
('Supporting Actor'),

4. Insert Data ke Cast Table

INSERT INTO cast (name, age, biodata) VALUES
('Robert Downey Jr.', 58, 'Famous for Iron Man role'),
('Chris Evans', 43, 'Famous for Captain America role'),
('Scarlett Johansson', 39, 'Famous for Black Widow role'),
('Chris Hemsworth', 40, 'Famous for Thor role');

5. Insert Data ke review
INSERT INTO review (movie_id, user_id, rating, critics) VALUES
(1, 1, 8, 'Great movie with excellent action scenes'),
(1, 2, 7, 'Good movie but the plot was predictable'),
(2, 1, 9, 'Amazing performance by the casts'),
(2, 3, 8, 'Visually stunning'),
(3, 2, 6, 'Average movie');


c. Select Data

1. Tampilkan semua movie dengan genre action
SELECT movie.title, genre.name AS genre 
FROM movie 
JOIN genre ON movie.genre_id = genre.id 
WHERE genre.name = 'Action';

2. Join untuk menggabungkan table movie dan genre
SELECT movie.title, movie.summary, movie.year, movie.poster, genre.name AS genre 
FROM movie 
JOIN genre ON movie.genre_id = genre.id;
